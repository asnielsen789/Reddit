@using Reddit.Shared.Models;
@using Reddit.Client.Services;
@inject ApiService apiService;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication


<tr>
    <td>@comment.Content</td>
    <td>@comment.CreatedAt</td>
    <td>@comment.User.Name</td>
    <td>@comment.calculateVotes()</td>
    <td><button @onclick="() => Upvote((int)comment.CommentId)">Upvote</button></td>
    <td><button @onclick="() => Downvote((int)comment.CommentId)">Downvote</button></td>
</tr>

@code {

    [Parameter]
    public Comment? comment { get; set; }
    private Vote? vote;

    [Parameter]
    public EventCallback VoteCasted { get; set; }

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task Upvote(int id)
    {

        vote = new Vote(true, new User("Bob Dylan"));
        vote.User.UserId = 1;

        string response = await apiService.voteComment(id, vote);
        Console.WriteLine(response);

        await VoteCasted.InvokeAsync();
    }

    private async Task Downvote(int id)
    {
        vote = new Vote(false, new User("Bob Dylan"));
        vote.User.UserId = 1;

        string response = await apiService.voteComment(id, vote);
        Console.WriteLine(response);

        await VoteCasted.InvokeAsync();
    }

}

