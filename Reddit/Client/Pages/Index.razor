@page "/"
@using Reddit.Shared.Models;
@using Reddit.Client.Services;
@inject ApiService apiService

@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration


@if (threads == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="col-sm-12">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Content</th>
                    <th>Created at</th>
                    <th>Created by</th>
                    <th colspan="5">Votes</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var thread in threads)
                {
                    <tr>
                        <!--
                            These a href links will match the route in the page 'PostItem.razor'.
                            The route is defined as "/post/{id}" and the id is the post id.
                        -->
                        <td><a href="/thread/@thread.RedditThreadId">@thread.Title</a></td>
                        <td><p style="width: 250px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">@thread.Content</p></td>
                        <td>@thread.CreatedAt</td>
                        <td>@thread.User.Name</td>
                        <td>@(thread.calculateVotes())</td>
                        <td><button class="btn btn-success btn-sm" @onclick="() => Upvote((int)thread.RedditThreadId)">Upvote</button></td>
                        <td><button class="btn btn-danger btn-sm" @onclick="() => Downvote((int)thread.RedditThreadId)">Downvote</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <br />
}

<hr />

<h3>Create new thread</h3>
<div class="row">
    <div class="col-sm-3">
        <h6>Insert title</h6>
        <input @bind=@newThread.Title type="text" class="form-control" />
    </div>
    <div class="col-sm-3">
        <h6>Insert username</h6>
        <input @bind=@newThread.User.Name type="text" class="form-control" />
    </div>
</div>
    <br>

    <div class="col-sm-6">
         <h6>Insert Content</h6>
         <textarea @bind=@newThread.Content class="form-control"></textarea>
    </div>

    <br>
    <br>
    <button class="btn btn-primary btn-md" @onclick="SubmitThread">Submit</button>


    @code {
        private RedditThread[]? threads;
        private Vote? vote;

        private RedditThread newThread { get; set; }


        protected override async Task OnInitializedAsync()
        {
            threads = await apiService.GetThreads();

        }

        protected override void OnInitialized()
        {
            newThread = new RedditThread();
            newThread.User = new User("Mark Gurban");
            newThread.User.UserId = 2;
        }

        private async Task Upvote(int id)
        {

            vote = new Vote(true, new User($"{newThread.User.Name}"));
            vote.User.UserId = 1;

            string response = await apiService.voteThread(id, vote);
            threads = await apiService.GetThreads();
            Console.WriteLine(response);
        }

        private async Task Downvote(int id)
        {
            vote = new Vote(false, new User("Bob Dylan"));
            vote.User.UserId = 1;

            string response = await apiService.voteThread(id, vote);
            threads = await apiService.GetThreads();
            Console.WriteLine(response);
        }

        private async Task SubmitThread()
        {
            newThread.CreatedAt = DateTime.Now;
            await apiService.CreateThread(newThread);
            threads = await apiService.GetThreads();

            newThread = new RedditThread();
            newThread.User = new User("Mark Gurban");
            newThread.User.UserId = 2;
        }
    }
